name: test ftp deployment

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js version
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'

      - name: Install dependencies and build app
        env:
          NEXT_PUBLIC_PROTOCOL: ${{ github.ref == 'refs/heads/master' && secrets.NEXT_PUBLIC_PROTOCOL || secrets.DEPLOY_TEST_NEXT_PUBLIC_PROTOCOL }}
          NEXT_PUBLIC_ORIGIN: ${{ github.ref == 'refs/heads/master' && secrets.NEXT_PUBLIC_ORIGIN || secrets.DEPLOY_TEST_NEXT_PUBLIC_ORIGIN_DEV }}
          NEXT_PUBLIC_AGENT_HOST: ${{ github.ref == 'refs/heads/master' && secrets.NEXT_PUBLIC_AGENT_HOST || secrets.DEPLOY_TEST_NEXT_PUBLIC_AGENT_HOST }}
        run: |
          npm install
          npm run build
      - name: Prepare deployment package
        run: |
          mkdir -p deploy
          cp -r .next deploy/.next  # ✅ Copy Next.js build output
          cp -r node_modules deploy/node_modules
          cp -r public deploy/public
          cp package.json deploy/
          cp package-lock.json deploy/
          cp server.js deploy/ || echo "⚠️ server.js NOT found!"
          # Debugging: Check deploy structure
          echo "Final deploy folder structure:"
          ls -la deploy
          zip -r release.zip deploy/
      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: node-app
          path: release.zip

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: ${{ github.ref == 'refs/heads/master' && 'Production' || 'Development' }}
  
    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: node-app
  
      - name: Unzip artifact for deployment
        run: unzip release.zip
  
      - name: Debug Deployed Files
        run: |
          echo "Checking deployed files..."
          ls -la ./deploy
  
      - name: Upload via FTP
        uses: SamKirkland/FTP-Deploy-Action@v4.3.5
        with:
          server: ${{ secrets.DEPLOY_TEST_FTP_SERVER }}
          username: ${{ secrets.DEPLOY_TEST_FTP_USERNAME }}
          password: ${{ secrets.DEPLOY_TEST_FTP_PASSWORD }}
          protocol: ftps
          port: 990
          server-dir: C:\ProgramData\IoT Gateway\Root\deploy
